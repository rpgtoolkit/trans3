<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
	<title>RPGToolkit Help &mdash;&nbsp;</title>
	<script type="text/javascript" src="js.js"></script>
	<link rel="stylesheet" href="styles/css.css" />
	<!--[if IE]>
		<style type="text/css">
			@import url("styles/ie.css");
		</style>
		<script type="text/javascript">
			g_bUsingIe = true;
		</script>
	<![endif]-->
</head>

<body>

<div id="document">

<h1><span style="font-size: 19.5pt;">tk3 (<a href="/">home</a>, <a href="/dev">dev</a>, <a href="/source">source</a>, <a href="/bugs">bugs</a>, <a href="/help" style="color: rgb(0, 50, 120);">help</a>)</span></h1>

<div class="topLinks">

<span><a href="index.htm">home</a></span>
|&nbsp;

<span><a href="page1.htm">quick-start</a></span>
|&nbsp;

<span
	onmouseover="showMenu('editor');"
	onmouseout="hideMenu('editor');"
	id="editor_link"
><a href="page2.htm">editor</a></span>
|&nbsp;

<div
	id="editor"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('editor')"
>
	<div><a href="pageed_environment.htm">editor environment</a></div>
	<div><a href="page3.htm">main file editor</a></div>
	<div><a href="page4.htm">board editor</a></div>
	<div><a href="page5.htm">tile editor</a></div>
	<div><a href="page6.htm">program editor</a></div>
	<div><a href="page7.htm">character editor</a></div>

	<div><a href="page8.htm">item editor</a></div>
	<div><a href="page9.htm">enemy editor</a></div>
	<div><a href="page10.htm">animation editor</a></div>
	<div><a href="page11.htm">tile bitmap editor</a></div>
	<div><a href="page12.htm">special move editor</a></div>
	<div><a href="page13.htm">status effect editor</a></div>

	<div style="margin-bottom: 0;"><a href="pageed_background.htm">background editor</a></div>
</div>

<span
	onmouseover="showMenu('engine');"
	onmouseout="hideMenu('engine');"
	id="engine_link"
><a href="page14.htm">playing</a></span>
|&nbsp;
<div
	id="engine"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('engine')"
>
	<div><a href="page15.htm">default systems</a></div>
	<div style="margin-bottom: 0;"><a href="page16.htm">distribution</a></div>
</div>

<span
	onmouseover="showMenu('rpgcode');"
	onmouseout="hideMenu('rpgcode');"
	id="rpgcode_link"
><a href="page17.htm">rpgcode</a></span>
|&nbsp;
<div
	id="rpgcode"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('rpgcode')"
>
	<div id="rpgcode_features_link"><a href="page18.htm">language features</a></div>
	<div><a href="page19.htm">function reference</a></div>
	<div
		style="margin-bottom: 0;"
		id="rpgcode_oop_link"
	><a href="page21.htm">object oriented coding</a></div>

</div>

<span
	onmouseover="showMenu('troubleshooting');"
	onmouseout="hideMenu('troubleshooting');"
	id="troubleshooting_link"
><a href="page22.htm">troubleshooting</a></span>
|&nbsp;
<div
	id="troubleshooting"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('troubleshooting')"
>
	<div><a href="page23.htm">faq</a></div>
	<div><a href="page25.htm">technical issues</a></div>
	<div style="margin-bottom: 0;"><a href="page26.htm">system requirements</a></div>
</div>

<span
	onmouseover="showMenu('about');"
	onmouseout="hideMenu('about');"
	style="margin-bottom: 0;"
	id="about_link"
><a href="page28.htm">about</a></span>
<div
	id="about"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('about')"
>
	<div><a href="page29.htm">history</a></div>
	<div><a href="page30.htm">links</a></div>
	<div style="margin-bottom: 0;"><a href="page31.htm">3.1.0 changelog</a></div>
</div>

</div>
<div id="content">
<h2><a href="page17.htm">RPGCode</a> &mdash; <a href="page21.htm">Object Oriented Coding</a> &mdash; Methods and Using</h2>

<div id="primer">

<h3>special methods</h3>

<p>
There are several reserved functions that have special purposes.
</p>

<pre>
method CDate(month!, day!, year!)
</pre>

<p>
The constructor is a function that is called when a new variable of type CDate is created (you still don't know a way to create such variables, see Using Classes for this information). This function is always named the same as the class itself. Its argument list is provided by the creator when the variable - or object (an instance of a class), more specifically - is created.
</p>

<pre>
method ~CDate()
</pre>

<p>
This function - the deconstructor - was not required in the implementation of CDate, but takes the format ~className and never has arguments. As the name insinuates, this function is called when an object of type CDate is destroyed. Note that the member variables still have their values when this function is called so you can use them in deinitialization tasks, they will not be killed until the call finishes.
</p>

<pre>
method release()
</pre>

<p>
The release function is automatically a member of every class - you need never code it. Calling the release function calls an object's deconstructor, kills its members variables, then the object itself.
</p>

<pre>
method getType()
</pre>

<p>
As with the last method, you should never provide code for getType, rather every class automatically has it as a member. This function returns the type of the object as a human readable, capital, string.
</p>

<h3>using classes</h3>

<p>
Now that you know how to create classes, you'll need to know how to use them in your code. The most important task will be, of course, to create an object. This is accomplished by using the class' name as a function.
</p>

<pre>
method theClass([constructor arguments])
</pre>

<p>
This function returns an object of type theClass, calling its constructor with the arguments provided if it requires any. Armed with this function, you can now use the CDate class at a basic level:
</p>

<pre>
// Create a new date: January 31st, 2005
p = CDate(1, 31, 2005)

// Display the date
p->display()

// Free the date
p->release()
</pre>

<p>
As you see, the -> operator is used for calling class methods.
</p>

<p class="boxedText">
You'll note that object names do not contain a type declaration character. You can, however, append a ! when referencing an object to obtain a unique number representing that object, and you should include it when passing objects as parameters.
</p>

<p>
This knowledge may seem like all you need to operate your classes, but some potential problems exist.
</p>

</div>

<hr />
<p>
<a href="page21_1.htm">previous</a>, <a href="page21_3.htm">forward</a>
</p>
</div>

<div id="links">
<p>
All contents copyright &copy; 2005, 2007 Colin James Fitzpatrick, Jonathan Hughes, and Samuel Bedwell.
</p>
</div>

</div>

</body>

</html>
