<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
	<title>RPGToolkit Help &mdash;&nbsp;</title>
	<script type="text/javascript" src="js.js"></script>
	<link rel="stylesheet" href="styles/css.css" />
	<!--[if IE]>
		<style type="text/css">
			@import url("styles/ie.css");
		</style>
		<script type="text/javascript">
			g_bUsingIe = true;
		</script>
	<![endif]-->
</head>

<body>

<div id="document">

<h1><span style="font-size: 19.5pt;">tk3 (<a href="/">home</a>, <a href="/dev">dev</a>, <a href="/source">source</a>, <a href="/bugs">bugs</a>, <a href="/help" style="color: rgb(0, 50, 120);">help</a>)</span></h1>

<div class="topLinks">

<span><a href="index.htm">home</a></span>
|&nbsp;

<span><a href="page1.htm">quick-start</a></span>
|&nbsp;

<span
	onmouseover="showMenu('editor');"
	onmouseout="hideMenu('editor');"
	id="editor_link"
><a href="page2.htm">editor</a></span>
|&nbsp;

<div
	id="editor"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('editor')"
>
	<div><a href="pageed_environment.htm">editor environment</a></div>
	<div><a href="page3.htm">main file editor</a></div>
	<div><a href="page4.htm">board editor</a></div>
	<div><a href="page5.htm">tile editor</a></div>
	<div><a href="page6.htm">program editor</a></div>
	<div><a href="page7.htm">character editor</a></div>

	<div><a href="page8.htm">item editor</a></div>
	<div><a href="page9.htm">enemy editor</a></div>
	<div><a href="page10.htm">animation editor</a></div>
	<div><a href="page11.htm">tile bitmap editor</a></div>
	<div><a href="page12.htm">special move editor</a></div>
	<div><a href="page13.htm">status effect editor</a></div>

	<div style="margin-bottom: 0;"><a href="pageed_background.htm">background editor</a></div>
</div>

<span
	onmouseover="showMenu('engine');"
	onmouseout="hideMenu('engine');"
	id="engine_link"
><a href="page14.htm">playing</a></span>
|&nbsp;
<div
	id="engine"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('engine')"
>
	<div><a href="page15.htm">default systems</a></div>
	<div style="margin-bottom: 0;"><a href="page16.htm">distribution</a></div>
</div>

<span
	onmouseover="showMenu('rpgcode');"
	onmouseout="hideMenu('rpgcode');"
	id="rpgcode_link"
><a href="page17.htm">rpgcode</a></span>
|&nbsp;
<div
	id="rpgcode"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('rpgcode')"
>
	<div id="rpgcode_features_link"><a href="page18.htm">language features</a></div>
	<div><a href="page19.htm">function reference</a></div>
	<div
		style="margin-bottom: 0;"
		id="rpgcode_oop_link"
	><a href="page21.htm">object oriented coding</a></div>

</div>

<span
	onmouseover="showMenu('troubleshooting');"
	onmouseout="hideMenu('troubleshooting');"
	id="troubleshooting_link"
><a href="page22.htm">troubleshooting</a></span>
|&nbsp;
<div
	id="troubleshooting"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('troubleshooting')"
>
	<div><a href="page23.htm">faq</a></div>
	<div><a href="page25.htm">technical issues</a></div>
	<div style="margin-bottom: 0;"><a href="page26.htm">system requirements</a></div>
</div>

<span
	onmouseover="showMenu('about');"
	onmouseout="hideMenu('about');"
	style="margin-bottom: 0;"
	id="about_link"
><a href="page28.htm">about</a></span>
<div
	id="about"
	class="submenu"
	onmouseover="g_currentMenu = null;"
	onmouseout="hideMenu('about')"
>
	<div><a href="page29.htm">history</a></div>
	<div><a href="page30.htm">links</a></div>
	<div style="margin-bottom: 0;"><a href="page31.htm">3.1.0 changelog</a></div>
</div>

</div>
<div id="content">
<div id="primer">
<h2><a href="page17.htm">RPGCode</a> &mdash; <a href="page18.htm">Language Features</a> &mdash; Error handling</h2>

<h3 style="margin-bottom: 10px;">Contents</h3>

<a href="#errors">Error handling</a>
<ul style="margin-bottom: 15px">
	<li><a href="#errors.alternate">Alternate syntax</a></li>
</ul>

<hr />

<a name="errors"></a>
<h3>Error handling</h3>

<p>
RPGCode has an error handling mechanism built-in to help you catch certain errors that you may want to handle differently than normal. One common example of implementing error handling into a program is by creating a fileExists() function. You may want to check whether a file has been created or not before trying to read from or write to it. It can be done like this:
</p>

<pre>
function fileExists(file, folder)
{
	setErrorHandler(:error);
	openFileInput(file, folder);
	closeFile(file);
	return true;

:error
	return false;
}
</pre>

<p>
This function first sets the error handler to <code>:error</code> (a label). When an error is raised inside the function, it will be caught by the error handler and will jump to the :error label near the bottom of the function. In this particular function, an error will be raised if <em>file</em> in <em>folder</em> does not exist and the function will return <code>false</code>; otherwise the function will return <code>true</code>.
</p>

<p>
Another error handling function, <code>setResumeNextHandler()</code>, may also be used to circumvent errors altogether, and it may be combined with <code>setErrorHandler()</code> to section off code that might raise an error and code that shouldn't. Here is an example of using it with the <code>fileExists()</code> function:
</p>

<pre>
function fileExists(file, folder)
{
	setErrorHandler(:error);
	openFileInput(file, folder);
	setResumeNextHandler();
	closeFile(file);
	return true;

:error
	return false;
}
</pre>

<p>
Here we use <code>setResumeNextHandler()</code> after the potentially erroneous code. Any error after this point will not be caught. (Note that because the function returns after we jump to the :error label anyway, <code>setResumeNextHandler()</code> isn't particularly useful here.) Another function that exists is <code>resumeNext()</code>, which can be used to jump back to the line after the error.
</p>

<p>
A caveat of the current error handling implementation is that it cannot catch errors in nested functions. For example, in the following code, the potential error that's raised by <code>nonexistentFile()</code> will not be ignored by <code>func()</code>, even though it uses <code>setResumeNextHandler()</code>:
</p>

<pre>
function nonexistentFile()
{
	openFileInput("anonexistentfile", "");
}

function func()
{
	setResumeNextHandler();
	nonexistentFile();
}
</pre>

<p class="boxedText">
Because of the way error handling is implemented, it cannot be used outside of functions. (You also shouldn't need to use it outside of a function; jumping to labels can be very messy and create unmaintainable code &mdash; use this only where it's necessary!)
</p>



<a name="errors.alternate"></a>
<h4>Alternative syntax</h4>

<p>
For backwards compatibility, an alternative syntax is provided for error handling. Here is the <code>fileExists()</code> function as an example:
</p>

<pre>
function fileExists(file, folder)
{
	on error goto :error
	openFileInput(file, folder);

	on error resume next
	closeFile(file);
	return true;

:error
	return false;
}
</pre>

<p>
It is recommended that you use the error handling functions rather than this alternative syntax.
</p>



</div>

<hr />

<p>
<a href="page18.4.htm">previous</a>, <a href="page18.6.htm">forward</a>
</p>
</div>

<div id="links">
<p>
All contents copyright &copy; 2005, 2007 Colin James Fitzpatrick, Jonathan Hughes, and Samuel Bedwell.
</p>
</div>

</div>

</body>

</html>
